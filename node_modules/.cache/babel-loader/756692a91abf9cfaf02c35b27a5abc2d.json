{"ast":null,"code":"var _jsxFileName = \"/Users/kevinli/Desktop/reactut2/src/components/counters.jsx\";\nimport React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      counters: [{\n        id: 1,\n        value: 4\n      }, {\n        id: 2,\n        value: 0\n      }, {\n        id: 3,\n        value: 0\n      }, {\n        id: 4,\n        value: 0\n      }]\n    };\n\n    this.handleIncrement = counter => {\n      //create a new array, and reset the state\n      const counters = [...this.state.counters];\n      counters[0].value++;\n    };\n\n    this.handleDelete = counterId => {\n      //here we basically take all counters except the one we delete\n      const counters = this.state.counters.filter(c => c.id !== counterId);\n      this.setState({\n        counters: counters\n      });\n    };\n\n    this.handleReset = () => {\n      //this makes sure we reset every value\n      const counters = this.state.counters.map(c => {\n        c.value = 0;\n        return c;\n      });\n      this.setState({\n        counters: counters\n      });\n    };\n  }\n\n  //here, we can simply put a bunch of <Counter />\n  //but instead we use map function to map every counter to a <Counter /> with an id\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleReset,\n      className: \"btn btn-primary btn-sm sm-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, \"Reset\"), this.state.counters.map(counter => React.createElement(Counter, {\n      key: counter.id,\n      onDelete: this.handleDelete,\n      onIncrement: this.handleIncrement,\n      counter: counter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Counters;","map":{"version":3,"sources":["/Users/kevinli/Desktop/reactut2/src/components/counters.jsx"],"names":["React","Component","Counter","Counters","state","counters","id","value","handleIncrement","counter","handleDelete","counterId","filter","c","setState","handleReset","map","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACNC,MAAAA,QAAQ,EAAE,CACR;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OADQ,EAER;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAFQ,EAGR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAHQ,EAIR;AAAED,QAAAA,EAAE,EAAE,CAAN;AAASC,QAAAA,KAAK,EAAE;AAAhB,OAJQ;AADJ,KADuB;;AAAA,SAU/BC,eAV+B,GAUbC,OAAO,IAAI;AAC3B;AACA,YAAMJ,QAAQ,GAAG,CAAC,GAAG,KAAKD,KAAL,CAAWC,QAAf,CAAjB;AACAA,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYE,KAAZ;AACD,KAd8B;;AAAA,SAgB/BG,YAhB+B,GAgBhBC,SAAS,IAAI;AAC1B;AACA,YAAMN,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBO,MAApB,CAA2BC,CAAC,IAAIA,CAAC,CAACP,EAAF,KAASK,SAAzC,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KApB8B;;AAAA,SAsB/BU,WAtB+B,GAsBjB,MAAM;AAClB;AACA,YAAMV,QAAQ,GAAG,KAAKD,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwBH,CAAC,IAAI;AAC5CA,QAAAA,CAAC,CAACN,KAAF,GAAU,CAAV;AACA,eAAOM,CAAP;AACD,OAHgB,CAAjB;AAIA,WAAKC,QAAL,CAAc;AAAET,QAAAA,QAAQ,EAAEA;AAAZ,OAAd;AACD,KA7B8B;AAAA;;AA+B/B;AACA;AACAY,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE,KAAKF,WADhB;AAEE,MAAA,SAAS,EAAC,6BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EASG,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,GAApB,CAAwBP,OAAO,IAC9B,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACH,EADf;AAEE,MAAA,QAAQ,EAAE,KAAKI,YAFjB;AAGE,MAAA,WAAW,EAAE,KAAKF,eAHpB;AAIE,MAAA,OAAO,EAAEC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CATH,CADF;AAsBD;;AAxD8B;;AA2DjC,eAAeN,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Counter from \"./counter\";\n\nclass Counters extends Component {\n  state = {\n    counters: [\n      { id: 1, value: 4 },\n      { id: 2, value: 0 },\n      { id: 3, value: 0 },\n      { id: 4, value: 0 }\n    ]\n  };\n\n  handleIncrement = counter => {\n    //create a new array, and reset the state\n    const counters = [...this.state.counters];\n    counters[0].value++;\n  };\n\n  handleDelete = counterId => {\n    //here we basically take all counters except the one we delete\n    const counters = this.state.counters.filter(c => c.id !== counterId);\n    this.setState({ counters: counters });\n  };\n\n  handleReset = () => {\n    //this makes sure we reset every value\n    const counters = this.state.counters.map(c => {\n      c.value = 0;\n      return c;\n    });\n    this.setState({ counters: counters });\n  };\n\n  //here, we can simply put a bunch of <Counter />\n  //but instead we use map function to map every counter to a <Counter /> with an id\n  render() {\n    return (\n      <div>\n        <button\n          onClick={this.handleReset}\n          className=\"btn btn-primary btn-sm sm-2\"\n        >\n          Reset\n        </button>\n\n        {/*remember here we mapped counters and call each COUNTER*/}\n        {this.state.counters.map(counter => (\n          <Counter\n            key={counter.id}\n            onDelete={this.handleDelete}\n            onIncrement={this.handleIncrement}\n            counter={counter}\n          >\n            {/*<h4>Counter #{counter.id}</h4>*/}\n          </Counter>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Counters;\n"]},"metadata":{},"sourceType":"module"}